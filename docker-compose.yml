version: '3.3'

services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: always
    networks:
      - payetonkawa-net

  mongo:
    image: mongo
    container_name: auth-mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      - MONGO_INITDB_ROOT_USERNAME=payetonkawa
      - MONGO_INITDB_ROOT_PASSWORD=Abcd@1234
    restart: always
    networks:
        - payetonkawa-net

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_ADMINUSERNAME=payetonkawa
      - ME_CONFIG_MONGODB_ADMINPASSWORD=Abcd@1234
    depends_on:
      - mongo
    restart: always
    networks:
      - payetonkawa-net

  auth-service:
    build: ./auth-service
    ports:
      - "3000:3000"
    depends_on:
      - rabbitmq
      - mongo
    environment:
      - RABBITMQ_URL=amqp://rabbitmq
      - MONGO_URI=mongodb://mongo:27017/auth-db
      - JWT_SECRET=supersecret
    restart: always
    networks:
      - payetonkawa-net

volumes:
  rabbitmq-data:
  mongo-data:

#  products-service:
#    build: ./products-service
#    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
#    ports:
#      - "8000:8000"
#    depends_on:
#      - rabbitmq
#      - auth-service
#
#  orders-service:
#    build: ./orders-service
#    command: bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8001"
#    ports:
#      - "8001:8001"
#    depends_on:
#      - rabbitmq
#      - auth-service
#      - products-service

networks:
  payetonkawa-net:
    driver: bridge